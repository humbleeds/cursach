from django.shortcuts import render, redirect
from django.http import HttpResponse
import csv
from apps.members.models import Member
from .models import GenerateReportForm
from django.db.models import Q
from django.contrib.auth.decorators import login_required
from django.db import connection

def dictfetchall(cursor):
    "Return all rows from a cursor as a dict"
    columns = [col[0] for col in cursor.description]
    return [
        dict(zip(columns, row))
        for row in cursor.fetchall()
    ]

def export_all(user_obj):
    # Generate Users.csv file with Report Data generated by Query
    response = HttpResponse(content_type='text/csv')
    response['Content-Disposition'] = 'attachment; filename="users.csv"'
    writer = csv.writer(response)
    writer.writerow(['First name', 'Last name', 'DOB', 'Mobile',
                     'Admission Date', 'Subscription Type', 'Batch'])
    members = user_obj.values_list('first_name', 'last_name', 'dob',
                                   'mobile_number', 'admitted_on', 'subscription_type', 'batch')
    # print(members)
    for user in members:
        writer.writerow(user)

    return response


@login_required
# Export Single User Data in CSV format, called on user profile view
def export_single(request, pk):
    member = Member.objects.filter(pk=pk)
    return export_all(member)


@login_required
def reports(request):
    """ Generate reports according to year, month and batch
    Year Range = 2020 - Current Year + 5 (Changed in Model)
    Month Range - 1 - 12
    Batch - Mor, Eve & Both

    export_all function is used to generate reports in .CSV (Excel Formats)
    """
    if request.method == 'POST':
        form = GenerateReportForm(request.POST)
        if form.is_valid():
            year = request.POST.get('year')
            month = request.POST.get('month')
            batch = request.POST.get('batch')

            if month and year and batch:
                query = f"SELECT * FROM members_member WHERE YEAR(registration_date)='{year}' AND MONTH(registration_date)='{month}' AND batch='{batch}' LIMIT 1000"
            elif month and year:
                query = f"SELECT * FROM members_member WHERE YEAR(registration_date)='{year}' AND MONTH(registration_date)='{month}' LIMIT 1000"
            elif month and batch:
                query = f"SELECT * FROM members_member WHERE MONTH(registration_date)='{month}' AND batch='{batch}' LIMIT 1000"
            elif year and batch:
                query = f"SELECT * FROM members_member WHERE YEAR(registration_date)='{year}' AND batch='{batch}' LIMIT 1000"
            else:
                query = f"SELECT * FROM members_member WHERE YEAR(registration_date)='{year}' LIMIT 1000"
            with connection.cursor() as cursor:
                cursor.execute(query)
                users = dictfetchall(cursor)
                for user in users:
                    user.update({
                        'pk': user['member_id']
                    })
            if 'export' in request.POST:
                return export_all(users)
            context = {
                'users': users,
                'form': form,
            }
            return render(request, 'reports/export.html', context)
    else:
        form = GenerateReportForm()
    return render(request, 'reports/export.html', {'form': form})
